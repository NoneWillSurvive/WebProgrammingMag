// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SVP.API.Data;

#nullable disable

namespace SVP.API.Migrations
{
    [DbContext(typeof(SVPContext))]
    [Migration("20221211192112_CreateModel")]
    partial class CreateModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SVP.API.Entities.Doctor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Quaification")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("SVP.API.Entities.Illness", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CodeMKB")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Illnesses");
                });

            modelBuilder.Entity("SVP.API.Entities.Patient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<bool>("Gender")
                        .HasColumnType("boolean")
                        .HasComment("true - М, false - Ж");

                    b.Property<long?>("IllnessId")
                        .HasColumnType("bigint");

                    b.Property<int>("LevelAnxiety")
                        .HasColumnType("integer")
                        .HasComment("Уровень тревоги");

                    b.Property<int>("LevelAsthenicSyndrome")
                        .HasColumnType("integer")
                        .HasComment("Уровень астенического синдрома");

                    b.Property<int>("LevelDepression")
                        .HasColumnType("integer")
                        .HasComment("Уровень депрессии");

                    b.Property<int>("LevelHopelessness")
                        .HasColumnType("integer")
                        .HasComment("Уровень безнадежности");

                    b.Property<bool>("NeedHospitalization")
                        .HasColumnType("boolean")
                        .HasComment("Есть ли зависимость");

                    b.Property<long?>("RecommendedDoctorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IllnessId");

                    b.HasIndex("RecommendedDoctorId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("SVP.API.Entities.Patient", b =>
                {
                    b.HasOne("SVP.API.Entities.Illness", "Illness")
                        .WithMany()
                        .HasForeignKey("IllnessId");

                    b.HasOne("SVP.API.Entities.Doctor", "RecommendedDoctor")
                        .WithMany()
                        .HasForeignKey("RecommendedDoctorId");

                    b.Navigation("Illness");

                    b.Navigation("RecommendedDoctor");
                });
#pragma warning restore 612, 618
        }
    }
}
